{"version":3,"sources":["config/express.js"],"names":["express","require","favicon","morgan","compression","bodyParser","methodOverride","cookieParser","errorHandler","path","config","module","exports","app","env","get","set","root","engine","renderFile","use","urlencoded","extended","json","raw","type","join","static","livereload","port"],"mappings":"AAAA;;;;AAIA;;AAEA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,UAAUD,QAAQ,eAAR,CAAd;AACA,IAAIE,SAASF,QAAQ,QAAR,CAAb;AACA,IAAIG,cAAcH,QAAQ,aAAR,CAAlB;AACA,IAAII,aAAaJ,QAAQ,aAAR,CAAjB;AACA,IAAIK,iBAAiBL,QAAQ,iBAAR,CAArB;AACA,IAAIM,eAAeN,QAAQ,eAAR,CAAnB;AACA,IAAIO,eAAeP,QAAQ,cAAR,CAAnB;AACA,IAAIQ,OAAOR,QAAQ,MAAR,CAAX;AACA,IAAIS,SAAST,QAAQ,eAAR,CAAb;;AAEAU,OAAOC,OAAP,GAAiB,UAASC,GAAT,EAAc;AAC3B,QAAIC,MAAMD,IAAIE,GAAJ,CAAQ,KAAR,CAAV;;AAEAF,QAAIG,GAAJ,CAAQ,OAAR,EAAiBN,OAAOO,IAAP,GAAc,eAA/B;AACAJ,QAAIK,MAAJ,CAAW,MAAX,EAAmBjB,QAAQ,KAAR,EAAekB,UAAlC;AACAN,QAAIG,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AACAH,QAAIO,GAAJ,CAAQhB,aAAR;AACAS,QAAIO,GAAJ,CAAQf,WAAWgB,UAAX,CAAsB;AAC1BC,kBAAU;AADgB,KAAtB,CAAR;AAGAT,QAAIO,GAAJ,CAAQf,WAAWkB,IAAX,EAAR;AACAV,QAAIO,GAAJ,CAAQf,WAAWmB,GAAX,CAAe;AACnBC,cAAM;AADa,KAAf,CAAR;AAGAZ,QAAIO,GAAJ,CAAQd,gBAAR;AACAO,QAAIO,GAAJ,CAAQb,cAAR;;AAEA,QAAI,iBAAiBO,GAArB,EAA0B;AACtBD,YAAIO,GAAJ,CAAQlB,QAAQO,KAAKiB,IAAL,CAAUhB,OAAOO,IAAjB,EAAuB,QAAvB,EAAiC,aAAjC,CAAR,CAAR;AACAJ,YAAIO,GAAJ,CAAQpB,QAAQ2B,MAAR,CAAelB,KAAKiB,IAAL,CAAUhB,OAAOO,IAAjB,EAAuB,QAAvB,CAAf,CAAR;AACAJ,YAAIG,GAAJ,CAAQ,SAAR,EAAmBN,OAAOO,IAAP,GAAc,SAAjC;AACAJ,YAAIO,GAAJ,CAAQjB,OAAO,KAAP,CAAR;AACH;;AAED,QAAI,kBAAkBW,GAAlB,IAAyB,WAAWA,GAAxC,EAA6C;AACzC,YAAIJ,OAAOkB,UAAX,EAAuB;AACnBf,gBAAIO,GAAJ,CAAQnB,QAAQ,oBAAR,EAA8B;AAClC4B,sBAAM;AAD4B,aAA9B,CAAR;AAGH;;AAEDhB,YAAIO,GAAJ,CAAQpB,QAAQ2B,MAAR,CAAelB,KAAKiB,IAAL,CAAUhB,OAAOO,IAAjB,EAAuB,MAAvB,CAAf,CAAR;AACAJ,YAAIO,GAAJ,CAAQpB,QAAQ2B,MAAR,CAAelB,KAAKiB,IAAL,CAAUhB,OAAOO,IAAjB,EAAuB,QAAvB,CAAf,CAAR;AACAJ,YAAIG,GAAJ,CAAQ,SAAR,EAAmB,QAAnB;AACAH,YAAIO,GAAJ,CAAQjB,OAAO,KAAP,CAAR;AACAU,YAAIO,GAAJ,CAAQZ,cAAR,EAXyC,CAWhB;AAC5B;AACJ,CArCD","file":"config/express.js","sourcesContent":["/**\n * Express configuration\n */\n\n'use strict';\n\nvar express = require('express');\nvar favicon = require('serve-favicon');\nvar morgan = require('morgan');\nvar compression = require('compression');\nvar bodyParser = require('body-parser');\nvar methodOverride = require('method-override');\nvar cookieParser = require('cookie-parser');\nvar errorHandler = require('errorhandler');\nvar path = require('path');\nvar config = require('./environment');\n\nmodule.exports = function(app) {\n    var env = app.get('env');\n\n    app.set('views', config.root + '/server/views');\n    app.engine('html', require('ejs').renderFile);\n    app.set('view engine', 'html');\n    app.use(compression());\n    app.use(bodyParser.urlencoded({\n        extended: false\n    }));\n    app.use(bodyParser.json());\n    app.use(bodyParser.raw({\n        type: 'text/xml'\n    }))\n    app.use(methodOverride());\n    app.use(cookieParser());\n\n    if ('production' === env) {\n        app.use(favicon(path.join(config.root, 'client', 'favicon.ico')));\n        app.use(express.static(path.join(config.root, 'client')));\n        app.set('appPath', config.root + '/client');\n        app.use(morgan('dev'));\n    }\n\n    if ('development' === env || 'test' === env) {\n        if (config.livereload) {\n            app.use(require('connect-livereload')({\n                port: 35711\n            }));\n        }\n\n        app.use(express.static(path.join(config.root, '.tmp')));\n        app.use(express.static(path.join(config.root, 'client')));\n        app.set('appPath', 'client');\n        app.use(morgan('dev'));\n        app.use(errorHandler()); // Error handler - has to be last\n    }\n};\n"],"sourceRoot":"/source/"}